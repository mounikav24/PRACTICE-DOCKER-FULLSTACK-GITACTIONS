services:
  mysqldb:
    image: mysql:8
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: taskmanagementapp
      MYSQL_DATABASE: klutasksdb
    ports:
      - "3309:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - springboot-mysql-net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    image: mounikav24/docker-tasksbackend:latest
    container_name: springboot
    ports:
      - "8080:8080"
    depends_on:
      - mysqldb
    restart: on-failure
    networks:
      - springboot-mysql-net

  frontend:
    image: mounikav24/docker-tasksfrontend:latest
    container_name: react
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: on-failure
    networks:
      - springboot-mysql-net

volumes:
  mysql_data:

networks:
  springboot-mysql-net:


# services:
#   mysqldb:
#     image: mysql:8
#     container_name: mysql-db
#     environment:
#       MYSQL_ROOT_PASSWORD: taskmanagementapp
#       MYSQL_DATABASE: klutasksdb
#     ports:
#       - "3309:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql
#     networks:
#       - springboot-mysql-net
#     healthcheck:
#       test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD --silent"]
#       interval: 10s
#       timeout: 5s
#       retries: 10

#   backend:
#     build:
#       context: ./taskmanager
#       dockerfile: backend.Dockerfile
#     container_name: springboot
#     ports:
#       - "8080:8080"
#     depends_on:
#       mysqldb:
#         condition: service_healthy
#     restart: on-failure
#     networks:
#       - springboot-mysql-net
#     environment:
#       - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/klutasksdb
#       - SPRING_DATASOURCE_USERNAME=root
#       - SPRING_DATASOURCE_PASSWORD=taskmanagementapp

#   frontend:
#     build:
#       context: ./taskmangement
#       dockerfile: frontend.Dockerfile
#     container_name: react
#     ports:
#       - "80:80"
#     depends_on:
#       - backend
#     restart: on-failure
#     networks:
#       - springboot-mysql-net

# volumes:
#   mysql_data:

# networks:
#   springboot-mysql-net: